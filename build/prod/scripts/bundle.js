class Enum{constructor(...e){for(let t=0;t<e.length;t++)this[e[t]]=new Enum.Item(e[t],t)}}Enum.Item=class{constructor(e,t){this.name=e,this.value=t}[Symbol.toPrimitive](e){return"number"===e?this.value:this.toString()}toString(){return this.name.toString()}toJSON(){return this.name}};let Interval=new Enum("DAILY","WEEKLY","MONTHLY");var dateToUTC=e=>new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds());class Chore{constructor(e=" ",t=" ",r=dateToUTC(new Date),n=Interval.DAILY,o=!1){this.title=e,this.person=t,this.time=r,this.interval=n,this.done=o}toString(){return`title = ${this.title} person = ${this.person} interval = ${this.interval} time = ${this.time} done = ${this.done}`}static fromJson(e){const t=dateToUTC(new Date);return t.setHours(e.time[0]),t.setMinutes(e.time[1]),t.setSeconds(e.time[2]),new Chore(e.title,e.person,new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds())),Interval[e.interval],e.done)}}const ChoreAPI={listeners:[],handleErrors:e=>e.ok?e:e.text().then(e=>Promise.reject(e)),getDoneLog(e){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerGetDoneLog?title=${encodeURIComponent(e)}`).then(this.handleErrors).then(e=>e.json())},getChore(e){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerGetChore?title=${encodeURIComponent(e)}`).then(this.handleErrors).then(e=>e.json()).then(e=>Chore.fromJson(e))},getChores(e=""){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerGetChores?person=${encodeURIComponent(e)}`).then(this.handleErrors).then(e=>e.json()).then(e=>e.map(e=>Chore.fromJson(e)))},addChore(){return fetch("https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerAddChore",{method:"POST"}).then(this.handleErrors).then(()=>this.notifyListeners("ADD"))},deleteChore(e){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerDeleteChore?title=${encodeURIComponent(e)}`,{method:"DELETE"}).then(this.handleErrors).then(()=>this.notifyListeners("DELETE",{title:e}))},updateChorePerson(e,t){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerUpdateChorePerson?title=${encodeURIComponent(e)}&person=${encodeURIComponent(t)}`,{method:"POST"}).then(this.handleErrors).then(()=>this.notifyListeners("UPDATE_PERSON",{title:e,person:t}))},updateChoreDone(e,t){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerUpdateChoreDone?title=${encodeURIComponent(e)}&done=${encodeURIComponent(t)}`,{method:"POST"}).then(this.handleErrors).then(()=>this.notifyListeners("UPDATE_DONE",{title:e,done:t}))},updateChoreInterval(e,t){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerUpdateChoreInterval?title=${encodeURIComponent(e)}&interval=${encodeURIComponent(t.toString().toUpperCase())}`,{method:"POST"}).then(this.handleErrors).then(()=>this.notifyListeners("UPDATE_INTERVAL",{title:e,interval:t}))},updateChoreTime(e,t){const r=JSON.stringify({title:e,time:t});return fetch("https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerUpdateChoreTime",{method:"POST",body:r}).then(this.handleErrors).then(()=>this.notifyListeners("UPDATE_TIME",{title:e,time:t}))},renameChore(e,t){return fetch(`https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerRenameChore?oldName=${encodeURIComponent(e)}&newName=${encodeURIComponent(t)}`,{method:"POST"}).then(this.handleErrors).then(()=>this.notifyListeners("RENAME",{oldName:e,newName:t}))},registerListener(e){return this.listeners.push(e),this.length-1},unregisterListener(e){this.listeners.splice(e,1)},notifyListeners(e,t){this.listeners.forEach(r=>r(e,t))}},DoneStatus=e=>React.createElement("div",{className:"done-status"},React.createElement("div",{className:"done-status-title"},e.title),React.createElement("div",{className:"done-status-icon"},e.done?"âœ”":"ðŸ—™")),Loading=()=>React.createElement("p",{className:"loading"},"Loading..."),formatters={M:e=>e.getMonth()+1,MM:e=>(e.getMonth()+1).toString().padLeft(2),MMM:e=>["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()],MMMM:e=>["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()],D:e=>e.getDate(),DD:e=>e.getDate().toString().padLeft(2),ddd:e=>["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][e.getDay()],dddd:e=>["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e.getDay()],d:e=>e.getDay(),E:e=>e.getDay()||7,YY:e=>e.getFullYear().toString().padLeft(4).substr(2),YYYY:e=>e.getFullYear().toString().padLeft(4),H:e=>e.getHours(),HH:e=>e.getHours().toString().padLeft(2),h:e=>{var t=e.getHours();return 0===t?12:t>12?t%12:t},hh:e=>formatters.h(e).toString().padLeft(2),m:e=>e.getMinutes(),mm:e=>e.getMinutes().toString().padLeft(2),s:e=>e.getSeconds(),ss:e=>e.getSeconds().toString().padLeft(2),A:e=>e.getHours()<12?"AM":"PM",a:e=>e.getHours()<12?"am":"pm"};let formatDate=(e,t)=>(0,formatters[t])(e);class ChoreDoneLog extends React.Component{constructor(e){super(e),this.state={fetching:!0,error:!1,page:0},this.onPrevious=this.onPrevious.bind(this),this.onNext=this.onNext.bind(this)}componentDidMount(){this.fetchData()}fetchData(){ChoreAPI.getDoneLog(this.props.title).then(e=>e.reverse()).then(e=>this.setState({doneLog:e,fetching:!1})).catch(e=>{console.error(e),this.setState({error:!0})})}onPrevious(){this.setState({page:this.state.page-1})}onNext(){this.setState({page:this.state.page+1})}render(){if(this.state.error)return React.createElement("p",{className:"error"},"Could not fetch done log");if(this.state.fetching)return React.createElement(Loading,null);if(0===this.state.doneLog.length)return React.createElement("p",null,"There are no entries in the log");{let e=10*this.state.page,t=this.state.doneLog.slice(e,e+9).map((e,t)=>{let r,n=new Date;switch(this.props.interval){case Interval.DAILY:n.setDate(n.getDate()-(t+1)),r=formatDate(n,"M/D/YYYY");break;case Interval.WEEKLY:n.setDate(n.getDate()-n.getDay()-7*(t+1)),n.setHours(0,0,0,0),r="Week of "+formatDate(n,"M/D/YYYY");break;case Interval.MONTHLY:n.setDate(1),n.setHours(0,0,0,0),n.setMonth(n.getMonth()-(t+1)),r=formatDate(n,"MMMM")}return React.createElement(DoneStatus,{done:e,title:r,key:t})});return[React.createElement("div",{key:"done-log",id:"done-log"},t),this.state.doneLog.length>10&&React.createElement("div",{key:"buttons"},this.state.page>0&&React.createElement("button",{onClick:this.onPrevious},"Previous"),this.state.page<this.state.doneLog.length-1&&React.createElement("button",{onClick:this.onNext},"Next"))]}}}const NoChoreSelected=()=>React.createElement("p",{id:"no-chore-selected"},"No Chore has been selected");var errorAlert=(e,t)=>{console.error(e),swal({title:"Error",text:t,icon:"error"})};class DeleteChoreButton extends React.PureComponent{constructor(e){super(e),this.onClick=this.onClick.bind(this)}onClick(){swal({title:"Are you sure you want to delete this chore?",showCancelButton:!0}).then(e=>{e&&(ChoreAPI.deleteChore(this.props.title).catch(e=>errorAlert(e,"Could not delete chore")),this.props.onDelete&&this.props.onDelete())})}render(){return React.createElement("button",{id:"delete-chore-button",onClick:this.onClick},"Delete Chore")}}var QueryStringUtils={getSearchParams:()=>new URLSearchParams(window.location.search),get(e){return this.getSearchParams().get(e)},update(e,t){const r=this.getSearchParams();e instanceof Array||(e=[e]),t instanceof Array||(t=[t]),e.forEach((e,n)=>r.set(e,t[n])),history.pushState({},"",`${window.location.pathname}?${r.toString()}`)},delete(e){const t=this.getSearchParams();t.delete(e),history.pushState({},"",`${window.location.pathname}?${t.toString()}`)}},createReactInputChangeHandler=(e,t=(()=>null),r=((e,t)=>t))=>n=>{let o=n.target.id,s="checkbox"===n.target.type?n.target.checked:n.target.value,a=Object.assign({},e.state);a[o]!==s&&e.setState({[o]:r(o,s)},()=>t.call(e,o,s,a))};class ChoreDetails extends React.Component{constructor(e){super(e),this.state={fetching:null!==this.props.title,error:!1,updating:!1,hasChore:null!==this.props.title,doneLog:!1,title:this.props.title},this.onInputChange=createReactInputChangeHandler(this,this.onInputChangeCallback,(e,t)=>""===t?" ":"interval"===e?Interval[t.toUpperCase()]:t),this.fetchData=this.fetchData.bind(this),this.onDelete=this.onDelete.bind(this),this.showDoneLog=this.showDoneLog.bind(this),this.showChore=this.showChore.bind(this)}componentDidMount(){"true"===QueryStringUtils.get("log")&&this.setState({doneLog:!0});let e=this.props.title;e&&this.fetchData(e)}static getDerivedStateFromProps(e,t){if(console.log9,null!==e&&null!==t&&e.title!==t.title)return{fetching:!0}}componentDidUpdate(e){e.title!==this.props.title&&this.fetchData(this.props.title)}onDelete(){QueryStringUtils.delete("chore"),this.setState({hasChore:!1})}showDoneLog(){QueryStringUtils.update("log",!0),this.setState({doneLog:!0})}showChore(){QueryStringUtils.update("log",!1),this.setState({doneLog:!1})}fetchData(e){ChoreAPI.getChore(e).then(e=>{const{title:t,person:r,time:n,interval:o,done:s}=e;this.setState({title:t,person:r,time:n,interval:o,done:s,fetching:!1,hasChore:!0,error:!1})}).catch(e=>{this.setState({error:!0}),console.error(e)})}onInputChangeCallback(e,t,r){this.setState({updating:!0});const n=e=>{errorAlert(e,"Could not update chore"),this.setState({deleting:!1,updating:!1})};switch(e){case"title":ChoreAPI.renameChore(r.title,this.state.title).then(()=>this.setState({updating:!1})).catch(n);break;case"done":ChoreAPI.updateChoreDone(this.state.title,this.state.done).catch(n);break;case"time":ChoreAPI.updateChoreTime(this.state.title,this.state.time).then(()=>this.setState({updating:!1})).catch(n);break;case"person":ChoreAPI.updateChorePerson(this.state.title,this.state.person).then(()=>this.setState({updating:!1})).catch(n);break;case"interval":ChoreAPI.updateChoreInterval(this.state.title,this.state.interval).then(()=>this.setState({updating:!1})).catch(n)}}render(){return this.state.error?React.createElement("p",{className:"error"},"Could not fetch chore"):this.state.fetching?React.createElement(Loading,null):this.state.hasChore?this.state.doneLog?[React.createElement("div",{key:"back"},React.createElement("button",{onClick:this.showChore},"Back")),React.createElement("div",{key:"log"},React.createElement(ChoreDoneLog,{title:this.state.title,interval:this.state.interval}))]:React.createElement("div",{id:"chore-details"},this.state.updating&&React.createElement("p",null,"Updating..."),React.createElement("div",null,React.createElement("label",{htmlFor:"title"},"Name: "),React.createElement("input",{id:"title",defaultValue:this.state.title,onBlur:this.onInputChange})),React.createElement("div",null,React.createElement("label",{htmlFor:"person"},"Person: "),React.createElement("input",{id:"person",defaultValue:this.state.person,onBlur:this.onInputChange})),React.createElement("div",null,React.createElement("label",{htmlFor:"time"},"Time: "),React.createElement(TimePicker,{id:"time",defaultValue:this.state.time,onBlur:this.onInputChange})),React.createElement("div",null,React.createElement("label",{htmlFor:"interval"},"Interval: "),React.createElement("select",{id:"interval",value:this.state.interval.toString().toLowerCase(),onChange:this.onInputChange},React.createElement("option",{value:"daily"},"Daily"),React.createElement("option",{value:"weekly"},"Weekly"),React.createElement("option",{value:"monthly"},"Monthly"))),React.createElement("div",null,React.createElement("label",{htmlFor:"done"},"Done: "),React.createElement("input",{id:"done",type:"checkbox",checked:this.state.done,onChange:this.onInputChange})),React.createElement("div",null,React.createElement("button",{onClick:this.showDoneLog},"Show Chore Log")),React.createElement("div",null,React.createElement(DeleteChoreButton,{onDelete:this.onDelete,title:this.state.title}))):React.createElement(NoChoreSelected,null)}}class ChoreListItem extends React.Component{constructor(e){super(e),this.onClick=this.onClick.bind(this),this.onKeyPress=this.onKeyPress.bind(this)}onClick(e){this.props.onClick(e,this.props.chore.title)}onKeyPress(e){13===e.keyCode&&this.props.onClick(e,this.props.chore.title)}shouldComponentUpdate(e){return this.props.chore.done===e.chore.title||this.props.chore.title===e.chore.title||this.props.chore.time.getTime()===e.chore.time.getTime()}render(){return React.createElement("li",{onClick:this.onClick,onKeyPress:this.onKeyPress},React.createElement("div",{className:"list-item-title"},this.props.chore.title),React.createElement("input",{type:"checkbox",className:"list-item-done",checked:this.props.chore.done,readOnly:!0,disabled:!0}),React.createElement("div",{className:"list-item-time"},formatDate(this.props.chore.time,"h:mm aa")))}}class ChoreList extends React.Component{constructor(e){super(e),this.state={chores:[],fetching:!0,error:!1},ChoreAPI.registerListener(this.notify.bind(this)),this.onClick=this.onClick.bind(this),this.fetchData=this.fetchData.bind(this),this.pollInterval=setInterval(this.fetchData,3e5)}componentDidMount(){this.fetchData()}static getDerivedStateFromProps(e){if(null!==e&&null!==this.props&&e.person!==this.props.person)return{fetching:!0}}componentDidUpdate(e){e.person!==this.props.person&&this.fetchData()}componentWillUnmount(){clearInterval(this.pollInterval)}fetchData(){ChoreAPI.getChores(this.props.person).then(e=>this.setState({chores:e,fetching:!1,error:!1})).catch(e=>{console.error(e),this.setState({error:!0})})}onClick(e,t){this.props.onItemClick&&this.props.onItemClick(t)}notify(e,t){if(["ADD","DELETE","UPDATE_DONE","RENAME","UPDATE_TIME"].includes(e)||"UPDATE_PERSON"===e&&""!==this.state.person)switch(e){case"ADD":this.setState({chores:this.state.chores.concat(new Chore)});break;case"DELETE":this.setState({chores:this.state.chores.filter(e=>e.title!==t.title)});break;case"UPDATE_DONE":this.setState({chores:this.state.chores.map(e=>e.title===t.title?(Object.assign(e).done=t.done,e):e)});break;case"UPDATE_TIME":this.setState({chores:this.state.chores.map(e=>e.title===t.title?(Object.assign(e).time=t.time,e):e)});break;case"UPDATE_PERSON":this.setState({chores:this.state.chores.map(e=>e.title===t.title?(Object.assign(e).person=t.person,e):e).filter(e=>e.person===t.person)});break;case"RENAME":this.setState({chores:this.state.chores.map(e=>e.title===t.oldName?(Object.assign(e).title=t.newName,e):e)})}}render(){const e=this.state.chores;if(this.state.error)return React.createElement("p",{className:"error"},"Could not fetch chores");if(this.state.fetching)return React.createElement(Loading,null);if(0===e.length)return React.createElement("p",{id:"no-chores"},"There are no chores");{const t=e.map((e,t)=>React.createElement(ChoreListItem,{onClick:this.onClick,key:t,chore:e}));return React.createElement("ul",{id:"chore-list"},t)}}}class AddChoreButton extends React.Component{constructor(e){super(e),this.onClick=this.onClick.bind(this)}onClick(){ChoreAPI.addChore().then(()=>this.props.onAdd&&this.props.onAdd()).catch(e=>errorAlert(e,"Could not add chore"))}render(){return React.createElement("button",{id:"add-chore-button",onClick:this.onClick},"Add Chore")}}class App extends React.Component{constructor(e){super(e),this.state={person:QueryStringUtils.get("person")||"",choreTitle:QueryStringUtils.get("chore")},this.onSubmit=this.onSubmit.bind(this),this.onChoreChange=this.onChoreChange.bind(this)}onSubmit(e,t){QueryStringUtils.update("person",t),this.setState({person:t})}onChoreChange(e=" "){QueryStringUtils.update("chore",e),this.setState({choreTitle:e})}render(){return[React.createElement("div",{key:"list",id:"chore-list-frame"},React.createElement(SearchBar,{id:"search-bar",placeholder:"Search by person",onSubmit:this.onSubmit,value:this.state.person}),React.createElement(AddChoreButton,{onAdd:this.onChoreChange}),React.createElement(ChoreList,{onItemClick:this.onChoreChange,person:this.state.person})),React.createElement("div",{key:"details",id:"chore-details-frame"},React.createElement(ChoreDetails,{title:this.state.choreTitle}))]}}const registerServiceWorker=()=>navigator.serviceWorker.register("service_worker.js"),askNotificationPermission=()=>new Promise((e,t)=>{const r=Notification.requestPermission(t=>{e(t)});r&&r.then(e,t)}),base64ToUint8Array=e=>{let t=window.atob(e),r=t.length,n=new Uint8Array(r);for(let e=0;e<r;e++)n[e]=t.charCodeAt(e);return n},subscribePush=e=>e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:base64ToUint8Array("BNr5f5wZ5Gg63fNfZ7U+/xkwrraXXgr1N14lkVXhWE0iN5sR3qdGds4vkFZSo31UVWWNFMaqEtnqhwJKVAV1PRs=")}),sendSubscriptionToServer=e=>{const t=e.getKey("p256dh"),r=e.getKey("auth"),n={endpoint:e.endpoint,key:btoa(String.fromCharCode.apply(null,new Uint8Array(t))),auth:btoa(String.fromCharCode.apply(null,new Uint8Array(r)))};return fetch("https://rdg2qx0aeg.execute-api.us-east-1.amazonaws.com/prod/ChoreManagerSubscribe",{method:"POST",body:JSON.stringify(n)}).then(e=>{if(e.ok)return e.json();e.text().then(console.error)})};let setupServiceWorker=async()=>{let e=await registerServiceWorker();"PushManager"in window&&"showNotification"in ServiceWorkerRegistration.prototype&&"granted"!==Notification.permission&&"granted"===await askNotificationPermission()&&subscribePush(e).then(sendSubscriptionToServer)};Date.prototype.toJSON=function(){const e=dateToUTC(this);return[e.getHours(),e.getMinutes(),e.getSeconds()]},ReactDOM.hydrate(React.createElement(App,null),document.getElementById("app")),"serviceWorker"in navigator&&setupServiceWorker();
//# sourceMappingURL=bundle.js.map
