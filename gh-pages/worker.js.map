{"version":3,"file":"worker.js","sources":["../../src/scripts/utils.js","../../src/scripts/WorkerBot.js","../../src/scripts/ControllerBot.js","../../src/scripts/WorkerBotWrapper.js","../../src/scripts/Controller.js","../../src/scripts/worker.js"],"sourcesContent":["//from https://stackoverflow.com/a/1527820/\r\nlet randInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n//from https://stackoverflow.com/a/12646864/7941251\r\nfunction shuffle(array) {\r\n\t//in place\r\n\tarray;\r\n\tfor (var i = array.length - 1; i > 0; i--) {\r\n\t\tvar j = Math.floor(Math.random() * (i + 1));\r\n\t\tvar temp = array[i];\r\n\t\tarray[i] = array[j];\r\n\t\tarray[j] = temp;\r\n\t}\r\n}\r\nfunction sleep(timeout) {\r\n\t// eslint-disable-next-line no-unused-vars\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(resolve, timeout);\r\n\t});\r\n}\r\nexport { randInt, shuffle, sleep };\r\n","/*eslint no-unused-vars:0*/\r\nclass WorkerBot {\r\n\tconstructor(index) {\r\n\t\tthis.index = index;\r\n\t}\r\n\tperformAction(message) {}\r\n\tsendMessage(x, y, surroundings) {}\r\n}\r\n/*let oldHasInstance = WorkerBot[Symbol.hasInstance].bind({});\r\nObject.defineProperty(WorkerBot, Symbol.hasInstance, {\r\n\tvalue: function(instance) {\r\n\t\treturn instance instanceof WorkerBotWrapper || oldHasInstance;\r\n\t}\r\n});*/\r\nexport default WorkerBot;\r\n","/*eslint no-unused-vars:0*/\r\nexport default class ControllerBot {\r\n\tconstructor(locations) {\r\n\t\tthis.storage = \"\";\r\n\t}\r\n\tsendMessage(messages, index) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n","/*eslint no-unused-vars:0*/\r\nexport default class WorkerBotWrapper {\r\n\tconstructor(x, y, index, name, color, botClass) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.index = index;\r\n\t\tthis.gold = 0;\r\n\t\tthis.color = color;\r\n\t\tthis.bot = new botClass(index);\r\n\t\tthis.name = `${name}#${index}`;\r\n\t\tthis.stunnedRound = undefined;\r\n\t\tthis.alive = true;\r\n\t}\r\n\tperformAction(message) {\r\n\t\treturn this.bot.performAction(message);\r\n\t}\r\n\tsendMessage(x, y, surrondings) {\r\n\t\treturn this.bot.sendMessage(x, y, surrondings);\r\n\t}\r\n}\r\n","import { randInt, shuffle, sleep } from \"./utils.js\";\r\nimport WorkerBot from \"./WorkerBot.js\";\r\nimport ControllerBot from \"./ControllerBot.js\";\r\nimport WorkerBotWrapper from \"./WorkerBotWrapper.js\";\r\nconst STARTING_COINS = 100;\r\nconst COINS_PER_ROUND = 10;\r\nconst NUM_WORKER_BOTS = 20;\r\nexport default class Controller {\r\n\tconstructor(botClasses, displayFunc, rounds = 1000, displayInterval = 100) {\r\n\t\tthis.rounds = rounds;\r\n\t\tthis.displayFunc = displayFunc;\r\n\t\tthis.displayInterval = displayInterval;\r\n\t\tthis.botClasses = botClasses.filter(\r\n\t\t\tbotClasses2 =>\r\n\t\t\t\tbotClasses2.controllerBot.prototype instanceof ControllerBot &&\r\n\t\t\t\tbotClasses2.workerBot.prototype instanceof WorkerBot\r\n\t\t);\r\n\t}\r\n\tasync runGame() {\r\n\t\tthis.initGrid();\r\n\t\tshuffle(this.botnets);\r\n\t\tthis.botnets = this.botnets.slice(0, 15);\r\n\t\tfor (let i = 0; i < this.rounds; i++) {\r\n\t\t\tawait this.runRound(i);\r\n\t\t}\r\n\t\treturn this.botnets\r\n\t\t\t.sort((a, b) => a.gold - b.gold)\r\n\t\t\t.map(botnet => [\r\n\t\t\t\tbotnet.name,\r\n\t\t\t\tbotnet.workerBots.reduce((a, b) => a + b.gold, 0)\r\n\t\t\t]);\r\n\t}\r\n\tasync runRound(round) {\r\n\t\tconsole.log(`Round #${round}`);\r\n\t\tfor (let i = 0; i < COINS_PER_ROUND; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.generateCoin();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.warn(\"No free space for coins\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tshuffle(this.botnets);\r\n\t\tlet workerBots = this.botnets.flatMap(botnet => botnet.workerBots);\r\n\t\tfor (let botnet of this.botnets) {\r\n\t\t\tfor (let i = 0; i < botnet.workerBots.length; i++) {\r\n\t\t\t\tlet workerBot = botnet.workerBots[i];\r\n\t\t\t\tif (workerBot.alive) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tworkerBot.stunnedRound === undefined ||\r\n\t\t\t\t\t\tworkerBot.stunnedRound === round - 1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tworkerBot.stunnedRound = undefined;\r\n\t\t\t\t\t\tlet allMessages = workerBots.map(workerBot2 =>\r\n\t\t\t\t\t\t\tworkerBot2.sendMessage(\r\n\t\t\t\t\t\t\t\tworkerBot2.x,\r\n\t\t\t\t\t\t\t\tworkerBot2.y,\r\n\t\t\t\t\t\t\t\tthis.getSurroundings(workerBot2.x, workerBot2.y)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet controllerBotMessage = botnet.controllerBot.sendMessage(\r\n\t\t\t\t\t\t\tallMessages,\r\n\t\t\t\t\t\t\ti\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet action = workerBot.performAction(\r\n\t\t\t\t\t\t\t\tcontrollerBotMessage\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif (!this.handleAction(action, workerBot)) {\r\n\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t`${workerBot.name} made an invalid action(${action})`\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\t\t`${workerBot.name} threw this exception with this message: ${controllerBotMessage}`\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconsole.error(error.stack);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//emp'd\r\n\t\t\t\t\t\tconsole.log(`${workerBot.name} was EMP'd`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.display();\r\n\t\tawait sleep(this.displayInterval);\r\n\t}\r\n\tinitGrid() {\r\n\t\tthis.grid = new Array(100); //indexed [y,x]\r\n\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\tthis.grid[i] = new Array(100).fill(\"\");\r\n\t\t}\r\n\t\tthis.botnets = this.botClasses.map(botClasses2 => {\r\n\t\t\tlet workerBots = [];\r\n\t\t\tfor (let i = 0; i < NUM_WORKER_BOTS; i++) {\r\n\t\t\t\tworkerBots.push(\r\n\t\t\t\t\tthis.generateWorkerBot(\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\tbotClasses2.name,\r\n\t\t\t\t\t\tbotClasses2.color,\r\n\t\t\t\t\t\tbotClasses2.workerBot\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlet controllerBot = new botClasses2.controllerBot(\r\n\t\t\t\tworkerBots.map(bot => [bot.x, bot.y])\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\tname: botClasses2.name,\r\n\t\t\t\tcontrollerBot,\r\n\t\t\t\tworkerBots\r\n\t\t\t};\r\n\t\t});\r\n\t\tfor (let i = 0; i < STARTING_COINS; i++) {\r\n\t\t\tthis.generateCoin();\r\n\t\t}\r\n\t}\r\n\thandleAction(action, bot) {\r\n\t\t//returns true if action was valid\r\n\t\tswitch (action[0]) {\r\n\t\t\tcase \"kill\":\r\n\t\t\t\treturn this.handleKill(action[1], bot);\r\n\t\t\tcase \"move\":\r\n\t\t\t\treturn this.handleMove(action[1], bot);\r\n\t\t\tcase \"emp\":\r\n\t\t\t\tthrow new TypeError(\"emp not implemented\");\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(`${bot.name} skipped its turn`);\r\n\t\t}\r\n\t}\r\n\thandleKill(param, bot) {\r\n\t\tif ([6, 7, 8, 11, 13, 16, 17, 18].includes(param)) {\r\n\t\t\tlet coords = this.surroundingsIndexToCoords(param, bot.x, bot.y);\r\n\t\t\tlet square;\r\n\t\t\ttry {\r\n\t\t\t\tsquare = this.grid[coords[1]][coords[0]];\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`${bot.name} tried to kill an invalid location(${coords})`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (square instanceof WorkerBotWrapper) {\r\n\t\t\t\tlet gold = Math.floor(square.gold);\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${bot.name} killed ${square.name} for ${gold} gold`\r\n\t\t\t\t);\r\n\t\t\t\tbot.gold += gold;\r\n\t\t\t\tthis.grid[coords[1]][coords[0]] = \"\";\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.kill(coords[0], coords[1]);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(coords);\r\n\t\t\t\t\tconsole.error(bot);\r\n\t\t\t\t\tconsole.error(square);\r\n\t\t\t\t\tconsole.error(this.botnets);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (param === 12) {\r\n\t\t\tconsole.log(`${bot.name} commited suicide`);\r\n\t\t\tthis.kill(bot.x, bot.y);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\thandleMove(param, bot) {\r\n\t\tif ([6, 7, 8, 11, 13, 16, 17, 18].includes(param)) {\r\n\t\t\tlet coords = this.surroundingsIndexToCoords(param, bot.x, bot.y);\r\n\t\t\tlet square;\r\n\t\t\ttry {\r\n\t\t\t\tsquare = this.grid[coords[1]][coords[0]];\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t`${bot.name} tried to move to an invalid location(${coords})`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (square === \"\" || square === \"C\") {\r\n\t\t\t\tif (square === \"C\") {\r\n\t\t\t\t\tbot.gold++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.grid[bot.y][bot.x] = \"\";\r\n\t\t\t\tthis.grid[coords[1]][coords[0]] = bot;\r\n\t\t\t\t[bot.x, bot.y] = coords;\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (param === 12) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tkill(x, y) {\r\n\t\tlet bot = this.botnets\r\n\t\t\t.flatMap(botnet => botnet.workerBots)\r\n\t\t\t.find(bot => bot.x === x && bot.y === y);\r\n\t\tbot.alive = false;\r\n\t}\r\n\tgenerateCoin() {\r\n\t\tlet x = randInt(0, 99);\r\n\t\tlet y = randInt(0, 99);\r\n\t\tif (this.grid[y][x] === \"\") {\r\n\t\t\tthis.grid[y][x] = \"C\";\r\n\t\t} else {\r\n\t\t\tthis.generateCoin();\r\n\t\t}\r\n\t}\r\n\tgenerateWorkerBot(index, name, color, workerBotClass) {\r\n\t\tlet x = randInt(0, 99);\r\n\t\tlet y = randInt(0, 99);\r\n\t\tif (this.grid[y][x] === \"\") {\r\n\t\t\tlet bot = new WorkerBotWrapper(\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t\tindex,\r\n\t\t\t\tname,\r\n\t\t\t\tcolor,\r\n\t\t\t\tworkerBotClass\r\n\t\t\t);\r\n\t\t\tthis.grid[y][x] = bot;\r\n\t\t\treturn bot;\r\n\t\t} else {\r\n\t\t\treturn this.generateWorkerBot(index, name, color, workerBotClass);\r\n\t\t}\r\n\t}\r\n\tgetSurroundings(x, y) {\r\n\t\tlet surroundings = [];\r\n\t\tfor (let i = -2; i <= 2; i++) {\r\n\t\t\tfor (let j = -2; j <= 2; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tsurroundings.push(this.grid[y + i][x + j]);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tsurroundings.push(\"E\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn surroundings.map(square =>\r\n\t\t\tsquare instanceof WorkerBotWrapper ? \"B\" : square\r\n\t\t);\r\n\t}\r\n\tsurroundingsIndexToCoords(index, x, y) {\r\n\t\t//returns as x,y\r\n\t\t/*console.log(\r\n\t\t\t`indx:${index},x=${x},y=${y}, return=${[\r\n\t\t\t\t(index % 5) - 2 + x,\r\n\t\t\t\tMath.floor(index / 5) - 2 + y\r\n\t\t\t]}`\r\n\t\t);*/\r\n\t\treturn [(index % 5) - 2 + x, Math.floor(index / 5) - 2 + y];\r\n\t}\r\n\tdisplay() {\r\n\t\tthis.displayFunc(\r\n\t\t\tthis.grid.map(row =>\r\n\t\t\t\trow.map(square =>\r\n\t\t\t\t\tsquare instanceof WorkerBotWrapper\r\n\t\t\t\t\t\t? [\"B\", square.color]\r\n\t\t\t\t\t\t: square\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n","import Controller from \"./Controller.js\";\r\nlet eval2 = eval;\r\nonmessage = function(event) {\r\n\tlet botClasses = event.data.botClasses.map(func => eval2(`(${func})()`));\r\n\tlet controller = new Controller(\r\n\t\tbotClasses,\r\n\t\tgrid => {\r\n\t\t\tpostMessage([\"update\", grid]);\r\n\t\t},\r\n\t\tevent.data.rounds,\r\n\t\tevent.data.displayInterval\r\n\t);\r\n\tcontroller.runGame().then(results => {\r\n\t\tpostMessage([\"end\", results]);\r\n\t});\r\n};\r\n"],"names":["randInt","min","max","Math","floor","random","shuffle","array","i","length","j","temp","WorkerBot","constructor","index","performAction","message","sendMessage","x","y","surroundings","ControllerBot","locations","storage","messages","WorkerBotWrapper","name","color","botClass","gold","bot","stunnedRound","undefined","alive","this","surrondings","STARTING_COINS","COINS_PER_ROUND","NUM_WORKER_BOTS","Controller","botClasses","displayFunc","rounds","displayInterval","filter","botClasses2","controllerBot","prototype","workerBot","initGrid","botnets","slice","runRound","sort","a","b","map","botnet","workerBots","reduce","round","console","log","generateCoin","error","warn","flatMap","allMessages","workerBot2","getSurroundings","controllerBotMessage","action","handleAction","stack","timeout","display","Promise","resolve","reject","setTimeout","grid","Array","fill","push","generateWorkerBot","handleKill","handleMove","TypeError","param","includes","square","coords","surroundingsIndexToCoords","kill","find","workerBotClass","row","eval2","eval","onmessage","event","data","func","postMessage","runGame","then","results"],"mappings":"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"}