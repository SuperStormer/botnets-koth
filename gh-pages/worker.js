let t=(t,e)=>Math.floor(Math.random()*(e-t+1))+t;function e(t){for(var e=t.length-1;e>0;e--){var o=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[o],t[o]=r}}class WorkerBot{constructor(t){this.index=t}performAction(t){}sendMessage(t,e,o){}}class ControllerBot{constructor(t){this.storage=""}sendMessage(t,e){return""}}class WorkerBotWrapper{constructor(t,e,o,r,n,s){this.x=t,this.y=e,this.index=o,this.gold=0,this.color=n,this.bot=new s(o),this.name="".concat(r,"#").concat(o),this.stunnedRound=void 0,this.alive=!0}performAction(t){return this.bot.performAction(t)}sendMessage(t,e,o){return this.bot.sendMessage(t,e,o)}}const o=100,r=10,n=20;class Controller{constructor(t,e){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;this.rounds=o,this.displayFunc=e,this.displayInterval=r,this.botClasses=t.filter(t=>t.controllerBot.prototype instanceof ControllerBot&&t.workerBot.prototype instanceof WorkerBot)}async runGame(){this.initGrid(),e(this.botnets),this.botnets=this.botnets.slice(0,15);for(let t=0;t<this.rounds;t++)await this.runRound(t);return this.botnets.sort((t,e)=>t.gold-e.gold).map(t=>[t.name,t.workerBots.reduce((t,e)=>t+e.gold,0)])}async runRound(t){console.log("Round #".concat(t));for(let t=0;t<r;t++)try{this.generateCoin()}catch(t){console.warn("No free space for coins")}e(this.botnets);let o=this.botnets.flatMap(t=>t.workerBots);for(let e of this.botnets)for(let r=0;r<e.workerBots.length;r++){let n=e.workerBots[r];if(n.alive)if(void 0===n.stunnedRound||n.stunnedRound===t-1){n.stunnedRound=void 0;let t=o.map(t=>t.sendMessage(t.x,t.y,this.getSurroundings(t.x,t.y))),s=e.controllerBot.sendMessage(t,r);try{let t=n.performAction(s);this.handleAction(t,n)||console.log("".concat(n.name," made an invalid action(").concat(t,")"))}catch(t){console.error("".concat(n.name," threw this exception with this message: ").concat(s)),console.error(t.stack)}}else console.log("".concat(n.name," was EMP'd"))}var n;this.display(),await(n=this.displayInterval,new Promise((t,e)=>{setTimeout(t,n)}))}initGrid(){this.grid=new Array(100);for(let t=0;t<100;t++)this.grid[t]=new Array(100).fill("");this.botnets=this.botClasses.map(t=>{let e=[];for(let o=0;o<n;o++)e.push(this.generateWorkerBot(o,t.name,t.color,t.workerBot));let o=new t.controllerBot(e.map(t=>[t.x,t.y]));return{name:t.name,controllerBot:o,workerBots:e}});for(let t=0;t<o;t++)this.generateCoin()}handleAction(t,e){switch(t[0]){case"kill":return this.handleKill(t[1],e);case"move":return this.handleMove(t[1],e);case"emp":throw new TypeError("emp not implemented");default:console.log("".concat(e.name," skipped its turn"))}}handleKill(t,e){if([6,7,8,11,13,16,17,18].includes(t)){let o,r=this.surroundingsIndexToCoords(t,e.x,e.y);try{o=this.grid[r[1]][r[0]]}catch(t){console.error("".concat(e.name," tried to kill an invalid location(").concat(r,")"))}if(o instanceof WorkerBotWrapper){let t=Math.floor(o.gold);console.log("".concat(e.name," killed ").concat(o.name," for ").concat(t," gold")),e.gold+=t,this.grid[r[1]][r[0]]="";try{this.kill(r[0],r[1])}catch(t){console.error(r),console.error(e),console.error(o),console.error(this.botnets)}return!0}return!1}return 12===t&&(console.log("".concat(e.name," commited suicide")),this.kill(e.x,e.y),!0)}handleMove(t,e){if([6,7,8,11,13,16,17,18].includes(t)){let o,r=this.surroundingsIndexToCoords(t,e.x,e.y);try{o=this.grid[r[1]][r[0]]}catch(t){console.error("".concat(e.name," tried to move to an invalid location(").concat(r,")"))}return(""===o||"C"===o)&&("C"===o&&e.gold++,this.grid[e.y][e.x]="",this.grid[r[1]][r[0]]=e,[e.x,e.y]=r,!0)}return 12===t}kill(t,e){this.botnets.flatMap(t=>t.workerBots).find(o=>o.x===t&&o.y===e).alive=!1}generateCoin(){let e=t(0,99),o=t(0,99);""===this.grid[o][e]?this.grid[o][e]="C":this.generateCoin()}generateWorkerBot(e,o,r,n){let s=t(0,99),i=t(0,99);if(""===this.grid[i][s]){let t=new WorkerBotWrapper(s,i,e,o,r,n);return this.grid[i][s]=t,t}return this.generateWorkerBot(e,o,r,n)}getSurroundings(t,e){let o=[];for(let r=-2;r<=2;r++)for(let n=-2;n<=2;n++)try{o.push(this.grid[e+r][t+n])}catch(t){o.push("E")}return o.map(t=>t instanceof WorkerBotWrapper?"B":t)}surroundingsIndexToCoords(t,e,o){return[t%5-2+e,Math.floor(t/5)-2+o]}display(){this.displayFunc(this.grid.map(t=>t.map(t=>t instanceof WorkerBotWrapper?["B",t.color]:t)))}}let s=eval;onmessage=function(t){let e=t.data.botClasses.map(t=>s("(".concat(t,")()")));new Controller(e,t=>{postMessage(["update",t])},t.data.rounds,t.data.displayInterval).runGame().then(t=>{postMessage(["end",t])})};
//# sourceMappingURL=worker.js.map
